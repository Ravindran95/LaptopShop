{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Sky","clr","sky","this","App","c","useState","Toggle","value","displayContent","display","onClick","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","Header","props","ID","React","Component","ExtendedClass","ret","defaultProps","MyClass","event","preventDefault","val","target","elements","alert","onSubmit","Button","type","name","Increment","increase","bind","state","count","setState","prevstate"],"mappings":"kPAWMA,E,kDACJ,WAAYC,EAAIC,GACf,IAAD,8BACE,cAAMD,IACHC,IAAIA,EAFT,E,sDAOA,OADa,8DACGC,KAAKD,Q,cAlBrB,WAAYD,GACX,oBACCE,KAAKF,IAAIA,E,oDAIT,OAAOE,KAAKF,Q,MA0CDG,MA3Bf,WAEE,IAAMC,EAAE,IAAIL,EAAI,OAAO,wBAFV,EAGaM,oBAAS,GAHtB,mBAGJC,EAHI,KAGIC,EAHJ,KAIPC,EAAiB,iCAAiCJ,EAAEK,UAUxD,OAJKH,IACHE,EAAiB,IAKnB,gCACE,wBAAQE,QAZY,WAEpBH,GADqBD,IAWrB,mBACA,qBAAKK,UAAU,UAAf,SACGH,QC9BMI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,S,IAEpBC,E,uKAIA,OACI,gCACI,uDACA,4BAAIxB,KAAKyB,MAAMC,Y,GAPRC,IAAMC,WAYrBC,E,uKAIL,OACC,gCACE,cAAC,EAAD,CAAQH,GAAI1B,KAAKyB,MAAMK,MACzB,cAAC,EAAD,W,GAP0BH,IAAMC,WAYlCC,EAAcE,aAAa,CACzBD,IAAI,qB,IAMAE,E,qKAEGC,GAELA,EAAMC,iBACN,IAAMC,EAAIF,EAAMG,OAAOC,SAASF,IAAI9B,MACjC8B,GAEDG,MAAM,WAAWH,K,+BAKnB,OACE,8BACE,uBAAMI,SAAUvC,KAAKwC,OAArB,UACE,uBAAOC,KAAK,OAAOC,KAAK,QACxB,qD,GAjBYf,IAAMC,WAwBtBe,E,kDAEJ,WAAYlB,GACX,IAAD,8BACE,cAAMA,IACDmB,SAAS,EAAKA,SAASC,KAAd,gBACd,EAAKC,MAAM,CACTC,MAAO,KAJX,E,uDASE/C,KAAKgD,UAAS,SAACC,GACb,MAAM,CACJF,MAAME,EAAUF,MAAO,Q,+BAM3B,OACE,gCACE,wCAAW/C,KAAK8C,MAAMC,SACtB,wBAAQvC,QAASR,KAAK4C,SAAtB,6B,GAvBgBjB,IAAMC,WA4B9BT,IAASC,OAAO,cAAC,EAAD,IAAkBE,SAASC,eAAe,WAC1DJ,IAASC,OAAO,cAAC,EAAD,IAAcE,SAASC,eAAe,UACtDb,M","file":"static/js/main.8972d491.chunk.js","sourcesContent":["import { useState } from \"react\";\nclass Colour{\n  constructor(clr)\n  {\n    this.clr=clr;\n  }\n  print()\n  {\n    return this.clr;\n  }\n}\nclass Sky extends Colour{\n  constructor(clr,sky)\n  {\n    super(clr);\n  this.sky=sky;\n  }\ndisplay()\n{\n  let variable=super.print();\n  return variable+this.sky;\n}\n}\nfunction App() {\n  \n  const c=new Sky(\"Blue\",\" which is sky colour\");\n    const [Toggle, value] = useState(false);\n    let displayContent = \"Welcome Your favourite colour \"+c.display();\n    const toggleHandler = () => {\n      const presentState = Toggle;\n      value(!presentState);\n    }\n    \n    if (!Toggle) {\n      displayContent = \"\";\n    }\n \n    return (\n\n    <div>\n      <button onClick={toggleHandler}>Click</button>\n      <div className=\"content\">\n        {displayContent}\n      </div>\n    </div>\n  );\n    }\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nclass Header extends React.Component{\n  render()\n  {\n    \n      return(\n          <div>\n              <p>Are you ready to learn</p>\n              <p>{this.props.ID}</p>\n              </div>\n      );\n  }\n}\nclass ExtendedClass extends React.Component{\n render()\n {\n  \n return(\n  <div>\n    <Header ID={this.props.ret} />\n  <MyClass />\n</div>\n );\n }\n}\nExtendedClass.defaultProps={\n  ret:\"React is awsome!!\"\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nclass MyClass extends React.Component\n{\n  Button(event)\n  {\n    event.preventDefault();\n    const val=event.target.elements.val.value;\n    if(val)\n    {\n      alert(\"Welcome \"+val);\n    }\n  }\n  render()\n  {\n    return(\n      <div>\n        <form onSubmit={this.Button}>\n          <input type=\"text\" name=\"val\"></input>\n          <button>submit</button>\n        </form>\n      </div>\n    );\n\n  }\n}\nclass Increment extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n    this.increase=this.increase.bind(this);\n    this.state={\n      count: 100\n    };\n  }\n  increase()\n  {\n    this.setState((prevstate)=>{\n      return{\n        count:prevstate.count -1\n      };\n    });\n  }\n  render()\n  {\n    return(\n      <div>\n        <h2>count:{this.state.count}</h2>\n        <button onClick={this.increase} >Decrease</button>\n      </div>\n    );\n  }\n}\nReactDOM.render(<ExtendedClass />,document.getElementById(\"sample\"));\nReactDOM.render(<Increment />,document.getElementById('root1'));\nreportWebVitals();\n"],"sourceRoot":""}