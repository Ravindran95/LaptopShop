{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Sky","clr","sky","this","App","c","useState","Toggle","value","displayContent","display","onClick","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","Header","React","Component","ExtendedClass"],"mappings":"0OAWMA,E,kDACJ,WAAYC,EAAIC,GACf,IAAD,8BACE,cAAMD,IACHC,IAAIA,EAFT,E,sDAOA,OADa,8DACGC,KAAKD,Q,cAlBrB,WAAYD,GACX,oBACCE,KAAKF,IAAIA,E,oDAIT,OAAOE,KAAKF,Q,MA0CDG,MA3Bf,WAEE,IAAMC,EAAE,IAAIL,EAAI,OAAO,wBAFV,EAGaM,oBAAS,GAHtB,mBAGJC,EAHI,KAGIC,EAHJ,KAIPC,EAAiB,iCAAiCJ,EAAEK,UAUxD,OAJKH,IACHE,EAAiB,IAKnB,gCACE,wBAAQE,QAZY,WAEpBH,GADqBD,IAWrB,mBACA,qBAAKK,UAAU,UAAf,SACGH,QC9BMI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,S,IAEpBC,E,uKAGA,OACI,8BACI,wD,GALOC,IAAMC,WAUrBC,E,uKAGL,OACC,gCACE,cAAC,EAAD,IACF,8D,GAN0BF,IAAMC,WAWlCP,IAASC,OAAO,cAAC,EAAD,IAAkBE,SAASC,eAAe,WAK1Db,M","file":"static/js/main.69022340.chunk.js","sourcesContent":["import { useState } from \"react\";\nclass Colour{\n  constructor(clr)\n  {\n    this.clr=clr;\n  }\n  print()\n  {\n    return this.clr;\n  }\n}\nclass Sky extends Colour{\n  constructor(clr,sky)\n  {\n    super(clr);\n  this.sky=sky;\n  }\ndisplay()\n{\n  let variable=super.print();\n  return variable+this.sky;\n}\n}\nfunction App() {\n  \n  const c=new Sky(\"Blue\",\" which is sky colour\");\n    const [Toggle, value] = useState(false);\n    let displayContent = \"Welcome Your favourite colour \"+c.display();\n    const toggleHandler = () => {\n      const presentState = Toggle;\n      value(!presentState);\n    }\n    \n    if (!Toggle) {\n      displayContent = \"\";\n    }\n \n    return (\n\n    <div>\n      <button onClick={toggleHandler}>Click</button>\n      <div className=\"content\">\n        {displayContent}\n      </div>\n    </div>\n  );\n    }\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nclass Header extends React.Component{\n  render()\n  {\n      return(\n          <div>\n              <p>React is awsome!!</p>\n              </div>\n      );\n  }\n}\nclass ExtendedClass extends React.Component{\n render()\n {\n return(\n  <div>\n    <Header />\n  <p>Are you ready to learn</p>\n</div>\n );\n }\n}\nReactDOM.render(<ExtendedClass />,document.getElementById(\"sample\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}